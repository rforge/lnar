//Function that takes a vector and applies Coeff at each element.
//MathPiper format
Function("CoeffMatrix",	{vec,var})
[
	Local(veclen,varlen,result,i,j);
	veclen:=Length(vec);
	varlen:=Length(var);
	result:=ZeroMatrix(varlen,veclen);
	i:=1;
        While(i<=varlen)
        [
		j:=1;
		While(j<=veclen)
		[
			result[i][j]:=Coef(vec[j],var[i],1);
			j++;
		];
		i++;
	];
	Transpose(result); // So result*var = A*vec 
	//A:stoichiometry matrix
];


x:=MakeVector(x,Length(A));
theta:=MakeVector(theta,Dimensions(A)[2]);
{nspecies,nreact}:= Dimensions(A);
odesize:= (nspecies*2) + ((nspecies)*(nspecies+1))/2;
y:=MakeVector(y,odesize);

rates2:=0;
ForEach(i, 1 .. nspecies) [vartmp:=y[i];rates2:=rates2+((D(vartmp) rates)*y[odesize-nspecies+i]);];
//Coefficient Matrix
LL:=CoeffMatrix(A*rates2, y[(odesize-nspecies+1) .. odesize]);
YM:=y[(odesize-nspecies+1) .. odesize];
WW:=A*DiagonalMatrix(rates2)*Transpose(A);
//test:=Simplify((LL.YM)-(A.rates2));

diffusion:= Simplify(A*DiagonalMatrix(rates)*Transpose(A));

//Make S matrix
S:=ZeroMatrix(nspecies,nspecies);
k:=nspecies+1;
For(i:=1,i<=nspecies,i++) [ For(j:=i,j<=nspecies,j++)[ S[i][j]:=y[k]; S[j][i]:=y[k]; k++; ]; ];

dS:=Simplify(LL*S+S*Transpose(LL)+diffusion);

rates3:=0;
ForEach(i, 1 .. nspecies) [
	vartmp:=y[i];
	rates3:=rates3+((D(vartmp) rates)* (y[i]+y[odesize-nspecies+i]/snmols));
];
dS2:=Simplify(LL*S+S*Transpose(LL)+A*DiagonalMatrix(rates3)*Transpose(A));

Function("CPrint", {Expr,var,name})
[
   Local(res,i);
   res:=Expr;
   For(i:=1,i<=Length(var),i++)
    [
      res:=Subst(var[i],yy[i-1]) res;
   ];
   res:=Subst(yy,ToAtom(name)) res;
   res;
];

ind:=0;
vartmp:= Simplify(A*rates);
vartmp:=CPrint(vartmp,y,"y");
vartmp:=CPrint(vartmp,theta,"theta");
For(i:=1,i<=nspecies,i++)
[ 
   Echo("fout[",ind,"]=", CForm(vartmp[i]),";");
   ind++;
];

vartmp:=dS;
vartmp:=CPrint(vartmp,y,"y");
vartmp:=CPrint(vartmp,theta,"theta");
For(i:=1,i<=nspecies,i++)
[
   For(j:=i,j<=nspecies,j++)
   [ 
      Echo("fout[",ind,"]=", CForm(vartmp[i][j]),";");
      ind++;
   ];
];

vartmp:=Simplify(A*rates2);
vartmp:=CPrint(vartmp,y,"y");
vartmp:=CPrint(vartmp,theta,"theta");
For(i:=1,i<=nspecies,i++)
[ 
   Echo("fout[",ind,"]=", CForm(vartmp[i]),";");
   ind++;
];
